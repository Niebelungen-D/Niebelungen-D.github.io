<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Niebelungen</title>
        <link>http://example.org/posts/</link>
        <description>所有文章 | Niebelungen</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 28 Aug 2021 01:27:56 &#43;0800</lastBuildDate><atom:link href="http://example.org/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Niebelungenのjournal</title>
    <link>http://example.org/posts/jounal/</link>
    <pubDate>Mon, 01 Jan 0001 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/jounal/</guid>
    <description><![CDATA[普普通通的周报 Keep going, never stop. 続けて、止まらない。 Niebelungenのjournal 2021-3.1~3.7 Glibc-2.20-malloc review IDApython learning 学习了基础的MIPS指令与函数调用，使用IDApy]]></description>
</item><item>
    <title>C&#43;&#43; Exploitation Basic</title>
    <link>http://example.org/posts/cpp-exploitation-basic/</link>
    <pubDate>Sat, 28 Aug 2021 01:27:56 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/cpp-exploitation-basic/</guid>
    <description><![CDATA[C++ Exploitation Basic Learn from angelboy&rsquo;s slide &amp; reference link &amp; reference link [TOC] Name mangling C++支持函数重载，在C中如果两个函数重名，这将会是非常严重的编译器级错误。问题的关键在于出现了两个相同的s]]></description>
</item><item>
    <title>Linux Kernel-Pwn Learning</title>
    <link>http://example.org/posts/linuxkernel-pwn-learning/</link>
    <pubDate>Sun, 22 Aug 2021 01:04:36 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/linuxkernel-pwn-learning/</guid>
    <description><![CDATA[Kernel ROP 学习Linux kernel Pwn的第一次尝试，hxp2020: kernel-rop Thanks @Midas for so great tutorials ! 环境设置 将附件解压得到以下文件： initramfs.cpio.gz：]]></description>
</item><item>
    <title>Musl Libc Pwn Learning</title>
    <link>http://example.org/posts/musl-libc-pwn-learning/</link>
    <pubDate>Sun, 22 Aug 2021 01:04:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/musl-libc-pwn-learning/</guid>
    <description><![CDATA[musl libc pwn浅析 在defcon结束后，国内外的很多比赛都出现了musl libc的heap exploit，前几天的BSides Noida CTF中的bab]]></description>
</item><item>
    <title>UCore Lab 2</title>
    <link>http://example.org/posts/ucore-lab-2/</link>
    <pubDate>Sat, 10 Jul 2021 01:53:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/ucore-lab-2/</guid>
    <description><![CDATA[<p>在正式开始写代码之前，我们先看看，整个内存管理的框架</p>
<p>参考：<a href="https://jishuin.proginn.com/p/763bfbd248c0" target="_blank" rel="noopener noreffer">内存管理迷雾</a></p>]]></description>
</item><item>
    <title>UCore Lab 1</title>
    <link>http://example.org/posts/ucore-lab-1/</link>
    <pubDate>Sat, 10 Jul 2021 01:21:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/ucore-lab-1/</guid>
    <description><![CDATA[<h1 id="启动">启动</h1>]]></description>
</item><item>
    <title>UCore Lab 0</title>
    <link>http://example.org/posts/ucore-lab-0/</link>
    <pubDate>Sat, 10 Jul 2021 01:01:20 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/ucore-lab-0/</guid>
    <description><![CDATA[<h1 id="概述">概述</h1>
<blockquote>
<p>在学习一个东西之前，我都喜欢思考，这个东西解决了什么问题？</p>
<p>所有的技术都不是无故产生的，面向问题的学习能更好的理解它的设计思路。</p>
</blockquote>
<p>操作系统是系统软件，在硬件层与应用软件之间。</p>
<p><strong>为什么需要操作系统？</strong></p>
<p>为用户提供更加方便的使用计算机的方式。对资源进行有效的管理。</p>]]></description>
</item><item>
    <title>2021NEWSCTF</title>
    <link>http://example.org/posts/2021newsctf/</link>
    <pubDate>Fri, 04 Jun 2021 00:27:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/2021newsctf/</guid>
    <description><![CDATA[<p>题思路基本都是最近见过的，正好学习了一下高版本的堆利用。第一个ak了pwn，还是被挤了下去，体验极差。</p>]]></description>
</item><item>
    <title>2021DASxBUUCTF May</title>
    <link>http://example.org/posts/2021dasxbuuctf-may/</link>
    <pubDate>Thu, 03 Jun 2021 00:26:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/2021dasxbuuctf-may/</guid>
    <description><![CDATA[<h1 id="安恒五月赛">安恒五月赛</h1>
<p>常规pwn</p>]]></description>
</item><item>
    <title>Ciscn2021 Pwn</title>
    <link>http://example.org/posts/ciscn2021-pwn/</link>
    <pubDate>Wed, 26 May 2021 00:27:39 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://example.org/posts/ciscn2021-pwn/</guid>
    <description><![CDATA[Ciscn2021-pwn 国赛部分pwn题的解答 lonelywolf double_free leak heap address ，打tcache_struct,leak libc，控制 next指针覆写__malloc_hook为og 1 2]]></description>
</item></channel>
</rss>
