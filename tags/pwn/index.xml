<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Pwn - 标签 - Niebelungen</title>
        <link>http://example.org/tags/pwn/</link>
        <description>Pwn - 标签 - Niebelungen</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 17 Jan 2022 17:45:07 &#43;0800</lastBuildDate><atom:link href="http://example.org/tags/pwn/" rel="self" type="application/rss+xml" /><item>
    <title>eBPF-Basic-Learning</title>
    <link>http://example.org/ebpf-basic-learning/</link>
    <pubDate>Mon, 17 Jan 2022 17:45:07 &#43;0800</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/ebpf-basic-learning/</guid>
    <description><![CDATA[eBPFWhat is eBPF ？eBPF 全称是 extended Berkeley Packet Filter ，起源于 BPF ( Berkeley Packet Filter )。顾名思义，它向linux内核提供了对数据包的过滤。 早期的网络监控器等都是作为用户级进程运]]></description>
</item><item>
    <title>uCore-lab-5</title>
    <link>http://example.org/ucore-lab-5/</link>
    <pubDate>Tue, 14 Dec 2021 23:15:15 &#43;0800</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/ucore-lab-5/</guid>
    <description><![CDATA[练习0在idt_init中添加 1 SETGATE(idt[T_SYSCALL], 0, GD_KTEXT, __vectors[T_SYSCALL], DPL_USER); 修改定时器中断： 1 2 3 4 5 6 ticks ++; if (ticks % TICK_NUM == 0) { assert(current != NULL); current-&gt;need_resched = 1; // print_ticks(); } 在alloc_proc中多出了PC]]></description>
</item><item>
    <title>uCore-lab-4</title>
    <link>http://example.org/ucore-lab-4/</link>
    <pubDate>Mon, 13 Dec 2021 23:15:12 &#43;0800</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/ucore-lab-4/</guid>
    <description><![CDATA[概述在前几次实验的基础上，我们将实现CPU的虚拟化。可以理解为让每个用户态进程认为自己“独占”CPU资源。 进程对于进程的定义：进程是指一个具]]></description>
</item><item>
    <title>uCore-lab-3</title>
    <link>http://example.org/ucore-lab-3/</link>
    <pubDate>Wed, 01 Dec 2021 23:15:25 &#43;0000</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/ucore-lab-3/</guid>
    <description><![CDATA[通过lab2知识的讲解，我们已经对虚拟内存有了一个初步认识， 有了内存地址虚拟化，我们就可以通过设置页表项来限定软件运行时的访问空间，确保软件]]></description>
</item><item>
    <title>C&#43;&#43; Exploitation Basic</title>
    <link>http://example.org/cpp-exploitation-basic/</link>
    <pubDate>Sat, 28 Aug 2021 01:27:56 &#43;0800</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/cpp-exploitation-basic/</guid>
    <description><![CDATA[C++ Exploitation BasicLearn from angelboy&rsquo;s slide &amp; reference link &amp; reference link [TOC] Name manglingC++支持函数重载，在C中如果两个函数重名，这将会是非常严重的编译器级错误。问题的关键在于出现了]]></description>
</item><item>
    <title>Linux Kernel-Pwn Learning</title>
    <link>http://example.org/linuxkernel-pwn-learning/</link>
    <pubDate>Sun, 22 Aug 2021 01:04:36 &#43;0800</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/linuxkernel-pwn-learning/</guid>
    <description><![CDATA[Kernel ROP学习Linux kernel Pwn的第一次尝试，hxp2020: kernel-rop Thanks @Midas for so great tutorials ! 环境设置将附件解压得到以下文件： initramfs.cpio.g]]></description>
</item><item>
    <title>Musl Libc Pwn Learning</title>
    <link>http://example.org/musl-libc-pwn-learning/</link>
    <pubDate>Sun, 22 Aug 2021 01:04:16 &#43;0800</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/musl-libc-pwn-learning/</guid>
    <description><![CDATA[musl libc pwn浅析在defcon结束后，国内外的很多比赛都出现了musl libc的heap exploit，前几天的BSides Noida CTF中的bab]]></description>
</item><item>
    <title>UCore Lab 2</title>
    <link>http://example.org/ucore-lab-2/</link>
    <pubDate>Sat, 10 Jul 2021 01:53:05 &#43;0800</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/ucore-lab-2/</guid>
    <description><![CDATA[<p>在正式开始写代码之前，我们先看看，整个内存管理的框架</p>
<p>参考：<a href="https://jishuin.proginn.com/p/763bfbd248c0" target="_blank" rel="noopener noreffer">内存管理迷雾</a></p>]]></description>
</item><item>
    <title>UCore Lab 1</title>
    <link>http://example.org/ucore-lab-1/</link>
    <pubDate>Sat, 10 Jul 2021 01:21:18 &#43;0800</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/ucore-lab-1/</guid>
    <description><![CDATA[<h1 id="启动" class="headerLink">
    <a href="#%e5%90%af%e5%8a%a8" class="header-mark"></a>启动</h1>]]></description>
</item><item>
    <title>UCore Lab 0</title>
    <link>http://example.org/ucore-lab-0/</link>
    <pubDate>Sat, 10 Jul 2021 01:01:20 &#43;0800</pubDate><author>
        <name>Niebelungen</name>
    </author><guid>http://example.org/ucore-lab-0/</guid>
    <description><![CDATA[<h1 id="概述" class="headerLink">
    <a href="#%e6%a6%82%e8%bf%b0" class="header-mark"></a>概述</h1><blockquote>
<p>在学习一个东西之前，我都喜欢思考，这个东西解决了什么问题？</p>
<p>所有的技术都不是无故产生的，面向问题的学习能更好的理解它的设计思路。</p>
</blockquote>
<p>操作系统是系统软件，在硬件层与应用软件之间。</p>
<p><strong>为什么需要操作系统？</strong></p>
<p>为用户提供更加方便的使用计算机的方式。对资源进行有效的管理。</p>]]></description>
</item></channel>
</rss>
